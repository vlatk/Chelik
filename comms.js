const config = require('./config.json');
const request = require("request")
const Discord = require('discord.js');
const helplist = require("./help.json");
const prefix = config.prefix;
const versions = config.versions;


// –ö–æ–º–∞–Ω–¥—ã //

function test(robot, mess, args) {
  var text = '–¢–µ—Å—Ç!'
  var embed = new Discord.MessageEmbed({title: text, description: '–≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ —Ç–µ—Å—Ç!'}).setColor("RANDOM");
  mess.channel.send(embed);
} 


function hello(robot, mess, args) {
  var text = '–ü—Ä–∏–≤–µ—Ç–∏–∫–∏'
  var embed = new Discord.MessageEmbed({title: text, description: '–ø—Ä–∏–≤–µ—Ç))'}).setColor("BLUE");
  mess.channel.send(embed);
} 

function invite(robot, mess, args) {
  var text = `**[>> –∫–ª–∏–∫ —Å—é–¥—ã <<](https://discord.com/oauth2/authorize?client_id=726865963424677909&scope=bot&permissions=8)**`
  var embed = new Discord.MessageEmbed({title: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –ß–µ–ª–∏–∫–∞ –∫ —Å–µ–±–µ!', description: text}).setColor("GREEN");
  mess.channel.send(embed);
} 



function clear(robot, mess, args){
const arggs = mess.content.split(' ').slice(1); // –í—Å–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∑–∞ –∏–º–µ–Ω–µ–º –∫–æ–º–∞–Ω–¥—ã —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º
const amount = args.slice(1).join(" "); // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã
if (!amount) return mess.channel.send(new Discord.MessageEmbed({title: '–û—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–πüßπ', description: '–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å!'}).setColor("RED")); // –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–¥–∞–Ω –ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
if (isNaN(amount)) return mess.channel.send(new Discord.MessageEmbed({title: '–û—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–πüßπ', description: '–í—ã –¥–æ–ª–∂–Ω—ã —É–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ!'}).setColor("RED")); // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ–º –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 

if (amount > 100) return mess.channel.send(new Discord.MessageEmbed({title: '–û—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–πüßπ', description: '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –±–æ–ª–µ–µ 100 —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ —Ä–∞–∑'}).setColor("RED")); // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–∏—Å–ª–æ–º –±–æ–ª—å—à–µ 100
if (amount < 1) return mess.channel.send(new Discord.MessageEmbed({title: '–û—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–πüßπ', description: '–ö–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ —á–µ–º 1'}).setColor("RED")); // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–∏—Å–ª–æ–º –º–µ–Ω—å—à–µ 1

if (!mess.channel.permissionsFor(mess.guild.me).has("MANAGE_MESSAGES") && !mess.channel.permissionsFor(mess.guild.me).has("MANAGE_MESSAGES")) return mess.channel.send(new Discord.MessageEmbed({title: '–û—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–πüßπ', description: '–£ –º–µ–Ω—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!'}).setColor("DARK_RED"));
if (!mess.channel.permissionsFor(mess.member).has("MANAGE_MESSAGES") && !mess.channel.permissionsFor(mess.member).has("MANAGE_MESSAGES")) return mess.channel.send(new Discord.MessageEmbed({title: '–û—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–πüßπ', description: '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!'}).setColor("DARK_RED"));

async function delete_messages() { // –û–±—ä—è–≤–ª–µ–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏

    await mess.channel.messages.fetch({
        limit: amount
    }).then(messages => {
        mess.channel.bulkDelete(messages)
        mess.channel.send(new Discord.MessageEmbed({title: '–û—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–πüßπ', description: `–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ ${amount} —Å–æ–æ–±—â–µ–Ω–∏–π!`}).setColor("GREEN"));
    })
};
mess.delete().catch();

delete_messages(); // –í—ã–∑–æ–≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
}

function say(robot, mess, args){
args = mess.content.split(` `);
args.shift();
args = args.join(` `);

mess.delete().catch(); // –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ 

mess.channel.send(args, {disableMentions: "everyone"});
}

function oir(robot, mess, args){

  //–í–æ –ø–µ—Ä–≤—ã—Ö —Å–¥–µ–ª–∞–µ–º —É–¥–æ–±–Ω–µ–µ. –ù–∞—á–Ω–µ–º —Å —Ä–∞–Ω–¥–æ–º–∞
  var random = Math.floor(Math.random() * 3) + 1
  
  //–¢–µ–ø–µ—Ä—å —Å–¥–µ–ª–∞–µ–º —Ç–∞–∫
  var text = "";
  
  //–ü–æ—Å–º–æ—Ç—Ä–∏ —É—Ä–æ–∫ –ø—Ä–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é switch case
  
  switch(random){
  case 1:
  text = "üåï –û—Ä—ë–ª!"
  break;
  case 2:
  text = "üåë –†–µ—à–∫–∞!";
  break; 
  case 3:
  text = "üåó –ú–æ–Ω–µ—Ç–∞ —É–ø–∞–ª–∞ —Ä–µ–±—Ä–æ–º";
  break; 
  default:
  text="–æ—à–∏–±–∫–∞";
  }
  
  //–¢–µ–ø–µ—Ä—å –æ–±—ä—è–≤–ª—è–µ–º –µ–º–±–µ–¥
  var embed = new Discord.MessageEmbed({title: "–ú–æ–Ω–µ—Ç–∫–∞ –ø–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è...", description: `**${text}**`}).setColor("DARK_BUT_NOT_BLACK").setTimestamp().setFooter(mess.author.tag, mess.author.displayAvatarURL());
  
  mess.channel.send(embed);
  }  

function _8ball(robot, mess, args) {

var answers = ["–ù–∞–≤–µ—Ä–Ω–æ...", "–ù–µ –¥—É–º–∞—é(", "–ù–µ—Ç, –Ω–µ—Ç –∏ –µ—â–µ —Ä–∞–∑ –Ω–µ—Ç!", "–û—Ç–≤–µ—Ç –Ω–µ –∏–∑ –ª—É—á—à–∏—Ö...", "–ù–µ –Ω–∞–¥–µ–π—Å—è :wink:", "–í–æ–∑–º–æ–∂–Ω–æ –¥–∞, –∞ –º–æ–∂–µ—Ç –Ω–µ—Ç ¬Ø\\_(„ÉÑ)_/¬Ø", "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ –¥–∞!", "–Ø –¥—É–º–∞—é –¥–∞...", "–£–≥—É", "–ö–æ–Ω–µ—á–Ω–æ –∂–µ!"] //–∏ —Ç–¥
var answer = answers[Math.floor(Math.random() * answers.length)];

var embed = new Discord.MessageEmbed()
.setColor('RANDOM')
.setTitle('–®–∞—Ä –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π:')
.setDescription(`<:special8ball:860147244812075018> ${answer} <:special8ball:860147244812075018> `)
.setTimestamp()
.setFooter(mess.author.tag, mess.author.displayAvatarURL());
mess.channel.send(embed)
}

function help(robot, mess, args) {
  if(!args[1]){ //–î–æ–±–∞–≤—å —ç—Ç—É —Å—Ç—Ä–æ–∫—É
  const request = require("request")
  var token = 'your token from https://developers.discord.com/your_project_id/bot'
  request.post({url: `https://discord.com/api/v9/channels/${mess.channel.id}/messages`, headers: {"Authorization": "Bot "+token, "Content-Type": "application/json"},
  body: JSON.stringify({
     // "content": "Hello, World!",
      "tts": false,
      "embeds": [{
        "title": "–°–ø–∏—Å–æ–∫ –ö–æ–º–∞–Ω–¥:",
        "description": `**–ú–æ–¥–µ—Ä–∞—Ü–∏—è:**   \`ban, kick, unban\` \n**–í–µ—Å–µ–ª—å–µ:**   \`8ball, oir\` \n**–ò–Ω—Ñ–æ –æ –±–æ—Ç–µ:**   \`info, chlog, servers\` \n**–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:**   \`clear, say, avatar\` \n**–ü—Ä–æ—á–µ–µ:**   \`help, hello, invite, test\` \n**–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**  \`covid, bsstats, gdstats\` \n\n`,
        "color": 3066993,
        "thumbnail": {
    "url": "https://cdn.discordapp.com/avatars/726865963424677909/428c60ceb40c3aeba0f98580ab34c726.webp?size=256"
  },
  "timestamp": new Date().toISOString(),
  "footer": {
  text: "–ß–µ–ª–∏–∫ V1.5a",
  },
  fields: [
  { name: '\u200B', value: '\u200B' }, 
  { name: '–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –∫–æ–º–∞–Ω–¥–µ –±–æ–ª—å—à–µ', value: `–Ω–∞–ø–∏—à–∏—Ç–µ **\`help <–∫–æ–º–∞–Ω–¥–∞>\`**, –ø—Ä–µ—Ñ–∏–∫—Å –±–æ—Ç–∞: \` ~ \`` , inline: true },
  { name: '_ _', value: `–¢–∞–∫–∂–µ, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ –±–æ—Ç–µ 
  –Ω–∞ [—Å–∞–ø–ø–æ—Ä—Ç-—Å–µ—Ä–≤–µ—Ä–µ](https://discord.gg/5Qf3m9ywpx) –±–æ—Ç–∞ –∏–ª–∏ –Ω–∞ [b.SD.C](https://bots.server-discord.com/726865963424677909). 
  –°–ø–∞—Å–∏–±–æ!üòÅ
  
  –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –Ω–∞ –Ω–∞—à–µ–º [GitHub](https://github.com/vlatk/Chelik)`},
  { name: '‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ', value: '_ _' }

  ]
  
      }],
  
      "components": [{
          "type": 1,
         "components": [
             {
             "type": 2,
             "label": "–°–∞–ø–ø–æ—Ä—Ç-—Å–µ—Ä–≤–µ—Ä",
             "style": 5,
             "url": "https://discord.gg/5Qf3m9ywpx",
             "emoji": {
              "id": "799571329048117268",
              "name": "android",
              "animated": false
             }},
             {
           "type": 2,
           "label": "GitHub",
           "style": 5,
           "url": "https://github.com/vlatk/Chelik",
          "emoji": {
            "id": "867104822481649734",
            "name": "github",
            "animated": false
           }},
       {
        "type": 2,
        "label": "b.SD.c",
        "style": 5,
        "url": "https://bots.server-discord.com/726865963424677909",
        "emoji": {
         "id": "863378474327867402",
         "name": "bsdc",
         "animated": false
       }}
       ]
    }]
        
  })}, (error, response, body) => {
      if(error) console.log(error);
    })
  }else{ //–ò –¥–∞–ª—å—à–µ –ø–æ–≥–Ω–∞–ª–∏
  //–ü–∏—à–µ–º –∑–¥–µ—Å—å –û–°–¢–ê–õ–¨–ù–û–ï
  var command = helplist.find(obj => obj.name === args[1]);
if(!command) return mess.reply( new Discord.MessageEmbed({title: "–ö–æ–º–∞–Ω–¥—ã:", description: "–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç—É!"}));
var embed = new Discord.MessageEmbed({
  title: `–ö–æ–º–∞–Ω–¥–∞: ${command.name}`, description:`**–û–ø–∏—Å–∞–Ω–∏–µ:** ${command.description}\n\n**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** ${command.usage}`}
).setColor("GREEN");

mess.channel.send(embed);
}
}


function ban (robot, mess, args) {
  args = mess.content.split(` `);
  args.shift();
  args = args.join(` `);
  var reason = args.split(' ').slice(1).join(" ")
  if(!reason) reason = "none"; 

  if (!mess.channel.permissionsFor(mess.guild.me).has("BAN_MEMBERS") && !mess.channel.permissionsFor(mess.guild.me).has("BAN_MEMBERS")) return mess.channel.send(new Discord.MessageEmbed({title: '–ú–æ–¥–µ—Ä–∞—Ü–∏—è‚öñ', description: '–£ –º–µ–Ω—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!'}).setColor("DARK_RED"));
  if (!mess.channel.permissionsFor(mess.member).has("BAN_MEMBERS") && !mess.channel.permissionsFor(mess.member).has("BAN_MEMBERS")) return mess.channel.send(new Discord.MessageEmbed({title: '–ú–æ–¥–µ—Ä–∞—Ü–∏—è‚öñ', description: '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!'}).setColor("DARK_RED"));
    const user = mess.mentions.users.first();
    // If we have a user mentioned
    if (user) {
      // Now we get the member from the user
      const member = mess.guild.member(user);
      // If the member is in the guild
      if (member) {
        /**
         * Ban the member
         * Make sure you run this on a member, not a user!
         * There are big differences between a user and a member
         * Read more about what ban options there are over at
         * https://discord.js.org/#/docs/main/master/class/GuildMember?scrollTo=ban
         */
        member
          .ban({
            reason: `${reason}`,
          })
          .then(() => {
            // We let the message author know we were able to ban the person
            mess.channel.send(new Discord.MessageEmbed()
            .setColor('DARK_RED')
            .setTitle('–ú–æ–¥–µ—Ä–∞—Ü–∏—è‚öñ')
            .setDescription(`***<@${user.id}>*** —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–µ–Ω!`)
            .addFields(
              { name: '\u200B', value: '\u200B' },
              { name: '–ü—Ä–∏—á–∏–Ω–∞:', value: `${reason}` , inline: true },
            )
            .setTimestamp()
            .setFooter(mess.author.tag, mess.author.displayAvatarURL()));
          })
          .catch(err => {
            // An error happened
            // This is generally due to the bot not being able to ban the member,
            // either due to missing permissions or role hierarchy
            mess.reply(new Discord.MessageEmbed({title: '–ú–æ–¥–µ—Ä–∞—Ü–∏—è‚öñ', description: `–£ –º–µ–Ω—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!`}).setColor("RED"));
            // Log the error
            console.error(err);
          });
      } else {
        // The mentioned user isn't in this guild
        mess.reply(new Discord.MessageEmbed({title: '–ú–æ–¥–µ—Ä–∞—Ü–∏—è‚öñ', description: `–≠—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ –Ω–µ —Å —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞!`}).setColor("RED"));
      }
    } else {
      // Otherwise, if no user was mentioned
      mess.reply(new Discord.MessageEmbed({title: '–ú–æ–¥–µ—Ä–∞—Ü–∏—è‚öñ', description: `–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–≥–æ –∑–∞–±–∞–Ω–∏—Ç—å!`}).setColor("RED"));
    }
}

function kick(robot, mess, args) {
  args = mess.content.split(` `);
  args.shift();
  args = args.join(` `);
  var reason = args.split(' ').slice(1).join(" ")
  if(!reason) reason = "none";  
  if (!mess.channel.permissionsFor(mess.guild.me).has("KICK_MEMBERS") && !mess.channel.permissionsFor(mess.guild.me).has("KICK_MEMBERS")) return mess.channel.send(new Discord.MessageEmbed({title: '–ú–æ–¥–µ—Ä–∞—Ü–∏—è‚öñ', description: '–£ –º–µ–Ω—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!'}).setColor("DARK_RED"));
  if (!mess.channel.permissionsFor(mess.member).has("KICK_MEMBERS") && !mess.channel.permissionsFor(mess.member).has("KICK_MEMBERS")) return mess.channel.send(new Discord.MessageEmbed({title: '–ú–æ–¥–µ—Ä–∞—Ü–∏—è‚öñ', description: '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!'}).setColor("DARK_RED"));

  const user = mess.mentions.users.first();
    // If we have a user mentioned
    if (user) {
      // Now we get the member from the user
      const member = mess.guild.member(user);
      // If the member is in the guild
      if (member) {
        /**
         * Kick the member
         * Make sure you run this on a member, not a user!
         * There are big differences between a user and a member
         */
        member
          .kick(`${reason}`)
          .then(() => {
            // We let the message author know we were able to kick the person
            mess.channel.send(new Discord.MessageEmbed()
            .setColor('DARK_RED')
            .setTitle('–ú–æ–¥–µ—Ä–∞—Ü–∏—è‚öñ')
            .setDescription(`***<@${user.id}>*** —É—Å–ø–µ—à–Ω–æ –∫–∏–∫–Ω—É—Ç!`)
            .addFields(
              { name: '\u200B', value: '\u200B' },
              { name: '–ü—Ä–∏—á–∏–Ω–∞:', value: `${reason}` , inline: true },
            )
            .setTimestamp()
            .setFooter(mess.author.tag, mess.author.displayAvatarURL()));
          })
          .catch(err => {
            // An error happened
            // This is generally due to the bot not being able to kick the member,
            // either due to missing permissions or role hierarchy
            mess.reply(new Discord.MessageEmbed({title: '–ú–æ–¥–µ—Ä–∞—Ü–∏—è‚öñ', description: `–£ –º–µ–Ω—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!`}).setColor("RED"));
            // Log the error
            console.error(err);
          });
      } else {
        // The mentioned user isn't in this guild
        mess.reply(new Discord.MessageEmbed({title: '–ú–æ–¥–µ—Ä–∞—Ü–∏—è‚öñ', description: `–≠—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ –Ω–µ —Å —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞!`}).setColor("RED"));
      }
      // Otherwise, if no user was mentioned
    } else {
      mess.reply(new Discord.MessageEmbed({title: '–ú–æ–¥–µ—Ä–∞—Ü–∏—è‚öñ', description: `–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–≥–æ –∫–∏–∫–Ω—É—Ç—å!`}).setColor("RED"));
    }
}


function avatar(robot, mess, args) {
  let user = mess.mentions.users.first()
  if(!user){
      user = mess.author;
  }
mess.channel.send( new Discord.MessageEmbed({title: ``, description: `**<@${user.id}> –∞–≤–∞—Ç–∞—Ä:**`}).setImage(`${user.displayAvatarURL({size: 1024, dynamic: true})}`).setColor("RANDOM"))
};

function unban(robot, mess, args) {
  args = mess.content.split(` `);
  args.shift();
  args = args.join(` `);

  if (!mess.channel.permissionsFor(mess.guild.me).has("BAN_MEMBERS") && !mess.channel.permissionsFor(mess.guild.me).has("BAN_MEMBERS")) return mess.channel.send(new Discord.MessageEmbed({title: '–ú–æ–¥–µ—Ä–∞—Ü–∏—è‚öñ', description: '–£ –º–µ–Ω—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!'}).setColor("DARK_RED"));
  if (!mess.channel.permissionsFor(mess.member).has("BAN_MEMBERS") && !mess.channel.permissionsFor(mess.member).has("BAN_MEMBERS")) return mess.channel.send(new Discord.MessageEmbed({title: '–ú–æ–¥–µ—Ä–∞—Ü–∏—è‚öñ', description: '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!'}).setColor("DARK_RED"));
  mess.guild.members.unban(`${args}`)
        .then(() => {
            // We let the message author know we were able to ban the person
            mess.channel.send(new Discord.MessageEmbed()
            .setColor('DARK_RED')
            .setTitle('–ú–æ–¥–µ—Ä–∞—Ü–∏—è‚öñ')
            .setDescription(`***<@${args}>*** —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–∞–Ω–µ–Ω!`)
            .addFields(
              { name: '\u200B', value: '\u200B' }
            )
            .setTimestamp()
            .setFooter(mess.author.tag, mess.author.displayAvatarURL()));
          })
          .catch(err => {
            // An error happened
            // This is generally due to the bot not being able to ban the member,
            // either due to missing permissions or role hierarchy
            mess.reply(new Discord.MessageEmbed({title: '–ú–æ–¥–µ—Ä–∞—Ü–∏—è‚öñ', description: `–í—ã –¥–æ–ª–∂–Ω—ã —É–∫–∞–∑–∞—Ç—å ID —Ç–æ–≥–æ, –∫–æ–≥–æ –≤–µ—Ä–Ω—É—Ç—å –∏–∑ –±–∞–Ω–∞!`}).setColor("RED"));
            // Log the error
            console.error(err);
          });
};

function btest(robot,mess,args){
var embed = new Discord.MessageEmbed({title: 'meow',description: 'test'}.setColor(RED)) 
  var msg = new Discord.APIMessage().create(mess.channel, undefined, {embed: embed, components: [{
    "type": 1,
   "components": [
       {
           "type": 2,
           "label": "–°–∞–ø–ø–æ—Ä—Ç-—Å–µ—Ä–≤–µ—Ä",
           "style": 5,
           "url": "https://discord.gg/UxKyysx4Md"
       }
   ]
}]}).create(mess.channel)};

function chlog(robot,mess,args){
 var embed = new Discord.MessageEmbed({title: "–ß–µ–π–Ω–¥–∂–ª–æ–≥ –í–µ—Ä—Å–∏–∏ V1.5a", description: "–ò—Ç–∞–∫! –ß—Ç–æ –∂–µ –Ω–æ–≤–æ–≥–æ –≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏? \n\n –≠—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–≤–æ–ª—å–Ω–æ –º–∞–ª–µ–Ω—å–∫–æ–µ. \n\n –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ \`~gdstats\`. –ü–æ–¥—Ä–æ–±–Ω–æ \`~help gdstats\`"}).addFields(
  { name: '\u200B', value: '\u200B' }, 
  { name: '‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ', value: '_ _' }).setColor("GREEN").setTimestamp().setFooter("–ß–µ–ª–∏–∫ –ë–û–¢ | V1.5a", 'https://cdn.discordapp.com/avatars/726865963424677909/428c60ceb40c3aeba0f98580ab34c726.webp');
mess.channel.send(embed)
}


function _info(robot,mess,args){
  var embed = new Discord.MessageEmbed({title: "–ß–µ–ª–∏–∫ —ç—Ç–æ - –ª–µ–≥–∫–∏–π –∏ –ø—Ä–æ—Å—Ç–æ–π –±–æ—Ç —Å–æ —Å–∫—Ä–æ–º–Ω—ã–º —Å–ø–∏—Å–∫–æ–º –∫–æ–º–∞–Ω–¥.", description: `–ß–µ–ª–∏–∫, —ç—Ç–æ –º–æ–π –ø–µ—Ä–≤—ã–π –±–æ—Ç. –≠—Ç–æ–≥–æ –±–æ—Ç —è –Ω–µ —Ö–æ—á—É –¥–µ–ª–∞—Ç—å —Å–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω—ã–º –∏ –Ω–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º. –ú–æ–π –±–æ—Ç –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á. –ë–æ—Ç –∏–º–µ–µ—Ç —Å–∫—Ä–æ–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥. \n
  –ë–∞–Ω, –∞–Ω–±–∞–Ω, –∫–∏–∫. –≠—Ç–æ –º–æ–¥–µ—Ä–∞—Ü–∏—è\n
  –ò–∑ –≤–µ—Å–µ–ª—å—è —É –Ω–∞—Å - –û—Ä–µ–ª –∏ —Ä–µ—à–∫–∞ –∏ 8–±–∞–ª–ª —à–∞—Ä. –î–∞, —Å–∫—Ä–æ–º–Ω–æ.\n
  –£ –Ω–∞—Å —Ç–∞–∫–∂–µ –µ—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø–æ —Ç–∏–ø—É - clear, avatar –∏ say(–≥–æ–≤–æ—Ä–∏—Ç—å –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞).\n
~~~NEW~~~\n
–¢–µ–ø–µ—Ä—å –≤ –±–æ—Ç–µ –µ—Å—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞! –£–∑–Ω–∞–π—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–±–æ–ª–µ–≤—à–∏—Ö –∏ —É–º–µ—Ä—à–∏–π COVID-19 –≤–æ –≤—Å–µ–º –º–∏—Ä–µ –∏–ª–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ä–µ–≥–∏–æ–Ω–∞—Ö —Å –ø–æ–º–æ—â—å—é ~covid, –∞ —Ç–∞–∫–∂–µ —É–∑–Ω–∞–π—Ç–µ —Å—Ç–∞—Ç—É —Å–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏–ª–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤–∞—à–µ–≥–æ –¥—Ä—É–≥–∞ –≤ –∏–≥—Ä–µ Geometry Dash –∏/–∏–ª–∏ BrawlStars —Å –ø–æ–º–æ—â—å—é ~bsstats –∏/–∏–ª–∏ ~gdstats –ü–æ–¥—Ä–æ–±–Ω–æ –æ–± —ç—Ç–∏—Ö –∫–æ–º–∞–Ω–¥–∞—Ö –≤ ~help\n
  –ù—É—É—É—É—É.....\n
  –ü–æ—Ö–æ–∂–µ —á—Ç–æ —ç—Ç–æ –≤—Å–µ ¬Ø\_(„ÉÑ)_/¬Ø \n`}).setThumbnail("https://cdn.discordapp.com/avatars/726865963424677909/428c60ceb40c3aeba0f98580ab34c726.webp").addFields(
    { name: '\u200B', value: '\u200B' }, 
    { name: '‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ', value: '_ _' }).setColor("GREEN").setTimestamp().setFooter("–ß–µ–ª–∏–∫ –ë–û–¢ | V1.5a", 'https://cdn.discordapp.com/avatars/726865963424677909/428c60ceb40c3aeba0f98580ab34c726.webp');
mess.channel.send(embed)
}

function servers(robot,mess,args){
  mess.channel.send(new Discord.MessageEmbed({title: "C–µ—Ä–≤–µ—Ä–∞ –ß–µ–ª–∏–∫–∞:", description: `<@726865963424677909> –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∞ **${robot.guilds.cache.size}** —Å–µ—Ä–≤–µ—Ä–∞—Ö!`}).setColor("RANDOM").addFields({name: '\n\n_ _', value: '_ _', inline: false}, {name: '‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨', value: '_ _', inline: true}).setTimestamp().setFooter("–ß–µ–ª–∏–∫ –ë–û–¢", 'https://cdn.discordapp.com/avatars/726865963424677909/428c60ceb40c3aeba0f98580ab34c726.webp'));
}

function covid(robot, mess, args){
  var codes = {ru: {code:"217", name:"–†–æ—Å—Å–∏–∏:flag_ru:"}, us: {code:"254", name:"–ê–º–µ—Ä–∏–∫–µ:flag_us:"}, kz: {code:"157", name:"–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ:flag_kz:"}, ua: {code:"256", name:"–£–∫—Ä–∞–∏–Ω–µ:flag_ua:"}, cy: {code:"100", name:"–ö–∏–ø—Ä–µ:flag_cy:"}, tr: {code:"253", name:"–¢—É—Ä—Ü–∏–∏:flag_tr:"}};
  var code;
  if(args[1]){
  code = codes[args[1]];
  }
  
  if(code){
  request({url:`https://coronavirus-tracker-api.herokuapp.com/v2/locations/${code.code}`}, (err, res, body) => {
      if(err) return console.error(err);
      var result = JSON.parse(body);
      var desc = `_ _`;
      if(result.location.latest.recovered && result.location.latest.recovered != 0) desc += `${result.location.latest.recovered} —á–µ–ª–æ–≤–µ–∫`;
      var embed = new Discord.MessageEmbed({title: `–°—Ç–∞—Ç–∏—Å–∫–∞ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π COVID-19ü¶†`, description: `–≤ **${code.name}**`}).addFields(
        {name: "_ _", value: "_ _"},
        {name: "ü§í–ó–∞–±–æ–ª–µ–ª–æ:", value: `_${result.location.latest.confirmed}_ —á–µ–ª–æ–≤–µ–∫`, inline: true},
        {name: "‚ò†–£–º–µ—Ä–ª–æ:", value: `_${result.location.latest.deaths}_ —á–µ–ª–æ–≤–µ–∫`, inline: true},
        {name: "üíö–í—ã–ª–µ—á–µ–Ω–æ:", value: `_${desc}_`},
        {name: "_ _", value: "_ _"},
        { name: '‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ', value: '_ _' }
    ).setColor('RED').setTimestamp().setFooter('–ß–µ–ª–∏–∫ –ë–û–¢', "https://cdn.discordapp.com/avatars/726865963424677909/428c60ceb40c3aeba0f98580ab34c726.webp");
      mess.channel.send(embed)
    });
  
  }else if(!args[1]){
  url = 
  request({url:"https://coronavirus-tracker-api.herokuapp.com/v2/locations"}, (err, res, body) => {
      if(err) return console.error(err);
      var result = JSON.parse(body)
      var embed = new Discord.MessageEmbed({title: `–°—Ç–∞—Ç–∏—Å–∫–∞ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π COVID-19ü¶†`, description: `–≤ **–º–∏—Ä–µüåç**`}).addFields(
        {name: "_ _", value: "_ _"},
        {name: "ü§í–ó–∞–±–æ–ª–µ–ª–æ:", value: `_${result.latest.confirmed}_ —á–µ–ª–æ–≤–µ–∫`, inline: true},
        {name: "‚ò†–£–º–µ—Ä–ª–æ:", value: `_${result.latest.deaths}_ —á–µ–ª–æ–≤–µ–∫`, inline: true},
        {name: "üíö–í—ã–ª–µ—á–µ–Ω–æ:", value: `_${result.latest.recovered}_`},
        {name: "_ _", value: "_ _"},
        { name: '‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ', value: '_ _' }
    ).setColor('RED').setTimestamp().setFooter('–ß–µ–ª–∏–∫ –ë–û–¢', "https://cdn.discordapp.com/avatars/726865963424677909/428c60ceb40c3aeba0f98580ab34c726.webp");
      mess.channel.send(embed)
    });
  }else{
  mess.channel.send(new Discord.MessageEmbed({title: '–°—Ç–∞—Ç–∏—Å–∫–∞ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π COVID-19ü¶†', description: '–ù–µ–∏–∑–≤–µ—Å—Ç–∞—è —Å—Ç—Ä–∞–Ω–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏üòï'}).setColor('DARK_RED').addFields({name: "_ _", value: "_ _"}, {name: '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:', value: '\`~help covid\`'}, {name: "_ _", value: "_ _"}, { name: '‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ', value: '_ _' }).setFooter('–ß–µ–ª–∏–∫ –ë–û–¢', "https://cdn.discordapp.com/avatars/726865963424677909/428c60ceb40c3aeba0f98580ab34c726.webp"));
  }
}

async function bsstats(robot, mess, args) {
  let botmsg = await mess.reply( new Discord.MessageEmbed({title: "–ü–æ–¥–æ–∂–¥–∏—Ç–µ —Å–µ–∫—É–Ω–¥–æ—á–∫—É...", description: "–ú—ã –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å —Å–µ—Ä–≤–µ—Ä–æ–≤ Brawl Stars. –≠—Ç–æ –∑–∞–π–º–µ—Ç –æ—Ç 2 –¥–æ 5 —Å–µ–∫—É–Ω–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ"}).setColor("GREEN"));
  if(!args) return botmsg.edit( new Discord.MessageEmbed({title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Brawl Stars", description: "–í—ã–±—Ä–∏—Ç–µ \`player/club\` –∏ –≤–≤–µ–¥–∏ —Ç–µ–≥ –∏–≥—Ä–æ–∫–∞/–∫–ª—É–±–∞."}).setColor("DARK_RED"));
  const request = require("request")
  switch(args[1]) {
  case 'player':
  request({url: `https://api.brawlstars.com/v1/players/%23${args[2].replace(/[^a-z–∞-—è—ë0-9]/gi, '')}/battlelog`, headers: {"Authorization": "your bearer token from https://developer.brawlstars.com/#/", "Content-Type": "application/json"}}, (err, res, body) => {
    if(err) return console.error(err);
    var result1 = JSON.parse(body);
    if(result1.reason) return botmsg.edit( new Discord.MessageEmbed({title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Brawl Stars", description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Ç–µ–≥–∞."}).setColor("DARK_RED"));
    var battlemap = (result1.items[0].event.map);
    if(result1.items[0].event.map == null) battlemap = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∫–∞—Ä—Ç–∞";

        var battlemode = (result1.items[0].battle.mode);
    if(result1.items[0].battle.mode == "heist") battlemode = "–û–≥—Ä–∞–±–ª–µ–Ω–∏–µ";
    if(result1.items[0].battle.mode == "gemGrab") battlemode = "–ó–∞—Ö–≤–∞—Ç –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤";
    if(result1.items[0].battle.mode == "bounty") battlemode = "–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø–æ–∏–º—É";
    if(result1.items[0].battle.mode == "hotZone") battlemode = "–ì–æ—Ä—è—á–∞—è –∑–æ–Ω–∞";
    if(result1.items[0].battle.mode == "brawlBall") battlemode = "–ë—Ä–æ—É–ª –±–æ–ª";
    if(result1.items[0].battle.mode == "holdTheTrophy") battlemode = "–£–¥–µ—Ä–∂–∏ —Ç—Ä–æ—Ñ–µ–π";
    if(result1.items[0].battle.mode == "siege") battlemode = "–û—Å–∞–¥–∞";
    if(result1.items[0].battle.mode == "soloShowdown") battlemode = "–û–¥–∏–Ω–æ—á–Ω–æ–µ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ";
    if(result1.items[0].battle.mode == "duoShowdown") battlemode = "–ü–∞—Ä–Ω–æ–µ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ";
    if(result1.items[0].battle.mode == "knockout") battlemode = "–ù–æ–∫–∞—É—Ç";
    if(result1.items[0].battle.mode == "bossFight") battlemode = "–ë–æ–π —Å –±–æ—Å—Å–æ–º";
    if(result1.items[0].battle.mode == "bigGame") battlemode = "–ë–æ–ª—å—à–∞—è –∏–≥—Ä–∞";
    if(result1.items[0].battle.mode == "roborumble") battlemode = "–†–æ–±–æ—Ä—É–±–∫–∞";
    if(battlemap == 'SUPER CITY') battlemode = "–†–∞–∑–≥—Ä–æ–º —Å—É–ø–µ—Ä —Å–∏—Ç–∏";
    if(result1.items[0].battle.mode == "volleyBrawl") battlemode = "–í–æ–ª–µ–π–±–æ–π";
    if(result1.items[0].battle.mode == "trophyThieves") battlemode = "–ü–æ—Ö–∏—Ç–∏—Ç–µ–ª–∏ —Ç—Ä–æ—Ñ–µ–µ–≤";

    var battleresult = (result1.items[0].battle.result);
    if(result1.items[0].battle.result == "victory") battleresult = "–ü–æ–±–µ–¥–∞";
    if(result1.items[0].battle.result == "defeat") battleresult = "–ü–æ—Ä–∞–∂–µ–Ω–∏–µ";
    if(result1.items[0].battle.result == "draw") battleresult = "–ù–∏—á—å—è";
    if(result1.items[0].battle.result == undefined) battleresult = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";

    var battletype = (result1.items[0].battle.type);
    if(result1.items[0].battle.type == "ranked") battletype = "–†–∞–Ω–≥–æ–≤—ã–π –±–æ–π";
    if(result1.items[0].battle.type == "soloRanked") battletype = "–û–¥–∏–Ω–æ—á–Ω—ã–π —Ä–∞–Ω–≥–æ–≤—ã–π –±–æ–π (–°–∏–ª–æ–≤–∞—è –ª–∏–≥–∞)";
    if(result1.items[0].battle.type == "teamRanked") battletype = "–ö–æ–º–∞–Ω–¥–Ω—ã–π —Ä–∞–Ω–≥–æ–≤—ã–π –±–æ–π (–°–∏–ª–æ–≤–∞—è –ª–∏–≥–∞)";
    if(result1.items[0].battle.type == "friendly") battletype = "–î—Ä—É–∂–µ—Å–∫–∏–π –±–æ–π";
    if(result1.items[0].battle.type == "challenge") battletype = "–ò—Å–ø—ã—Ç–∞–Ω–∏–µ";
    if(result1.items[0].battle.type == undefined) battletype = "–û—Å–æ–±–æ–µ —Å–æ–±—ã—Ç–∏–µ";

  request({url: `https://api.brawlstars.com/v1/players/%23${args[2].replace(/[^a-z–∞-—è—ë0-9]/gi, '')}`, headers: {"Authorization": "your bearer token from https://developer.brawlstars.com/#/", "Content-Type": "application/json"}}, (err, res, body) => {
    if(err) return console.error(err);
    var result = JSON.parse(body);
    var roborub = "0";
    if(result.bestRoboRumbleTime == 1) roborub = "–ù–æ—Ä–º–∞–ª—å–Ω–æ";
if(result.bestRoboRumbleTime == 2) roborub = "–°–ª–æ–∂–Ω–æ";
if(result.bestRoboRumbleTime == 3) roborub = "–≠–∫—Å–ø–µ—Ä—Ç";
if(result.bestRoboRumbleTime == 4) roborub = "–ú–∞—Å—Ç–µ—Ä";
if(result.bestRoboRumbleTime == 5) roborub = "–ë–µ–∑—É–º–∏–µ";
if(result.bestRoboRumbleTime == 6) roborub = "–ë–µ–∑—É–º–∏–µ II";
if(result.bestRoboRumbleTime == 7) roborub = "–ë–µ–∑—É–º–∏–µ III";
if(result.bestRoboRumbleTime == 8) roborub = "–ë–µ–∑—É–º–∏–µ IV";
if(result.bestRoboRumbleTime == 9) roborub = "–ë–µ–∑—É–º–∏–µ V";
if(result.bestRoboRumbleTime == 10) roborub = "–ë–µ–∑—É–º–∏–µ VI";
if(result.bestRoboRumbleTime == 11) roborub = "–ë–µ–∑—É–º–∏–µ VII";
if(result.bestRoboRumbleTime == 12) roborub = "–ë–µ–∑—É–º–∏–µ VIII";
if(result.bestRoboRumbleTime == 13) roborub = "–ë–µ–∑—É–º–∏–µ IX";
if(result.bestRoboRumbleTime == 14) roborub = "–ë–µ–∑—É–º–∏–µ X";

    var emoji = "";
if(result.trophies>0) emoji = "<:0k:863854863649210368>";
if(result.trophies>1000) emoji = "<:1k:863854874050953296>";
if(result.trophies>2000) emoji = "<:2k:863854883958685747>";
if(result.trophies>3000) emoji = "<:3k:863854690005155860>";
if(result.trophies>4000) emoji = "<:4k:863854701162004521>";
if(result.trophies>6000) emoji = "<:6k:863854721588789318>";
if(result.trophies>8000) emoji = "<:8k:863854734917369866>";
if(result.trophies>10000) emoji = "<:10k:863854750926372874>";
if(result.trophies>16000) emoji = "<:16k:863854764272910376>";
if(result.trophies>30000) emoji = "<:30k:863854777251528774>";
if(result.trophies>50000) emoji = "<:50k:863854788487675974>";

var club = '<:club:863792251447279647> –ò–º—è –∫–ª—É–±–∞:';
if(result.club.name == undefined) club = '<:noclub:863791314788024351> –ò–º—è –∫–ª—É–±–∞:';

var type = '**–¢–∏–ø –±–æ—è:**';
if(battletype == '–û–¥–∏–Ω–æ—á–Ω—ã–π —Ä–∞–Ω–≥–æ–≤—ã–π –±–æ–π (–°–∏–ª–æ–≤–∞—è –ª–∏–≥–∞)') type = '<:powerleague:863801243821539338> **–¢–∏–ø –±–æ—è:**';
if(battletype == '–ö–æ–º–∞–Ω–¥–Ω—ã–π —Ä–∞–Ω–≥–æ–≤—ã–π –±–æ–π (–°–∏–ª–æ–≤–∞—è –ª–∏–≥–∞)') type = '<:powerleague:863801243821539338> **–¢–∏–ø –±–æ—è:**';
if(battletype == '–î—Ä—É–∂–µ—Å–∫–∏–π –±–æ–π') type = '<:friendlygame:863809473646690304> **–¢–∏–ø –±–æ—è:**';
if(battletype == '–†–∞–Ω–≥–æ–≤—ã–π –±–æ–π') type = '<:trophyyy:863810231322542141> **–¢–∏–ø –±–æ—è:**';
if(battletype == '–û—Å–æ–±–æ–µ —Å–æ–±—ã—Ç–∏–µ') type = '<:bossfight:863797514146545715> **–¢–∏–ø –±–æ—è:**';
if(battletype == '–ò—Å–ø—ã—Ç–∞–Ω–∏–µ') type = '<:challenge:864017779769606184> **–¢–∏–ø –±–æ—è:**';

var mode = ''
    if(battlemode == '–û–≥—Ä–∞–±–ª–µ–Ω–∏–µ') mode = '<:heist:863796193636122654> **–†–µ–∂–∏–º:**';
    if(battlemode == '–ó–∞—Ö–≤–∞—Ç –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤') mode = '<:gemgrab:863796099097165874> **–†–µ–∂–∏–º:**';
    if(battlemode == '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø–æ–∏–º—É') mode = '<:bounty:863796179471826985> **–†–µ–∂–∏–º:**';
    if(battlemode == '–ì–æ—Ä—è—á–∞—è –∑–æ–Ω–∞') mode = '<:hotzone:863797481044705300> **–†–µ–∂–∏–º:**';
    if(battlemode == '–ë—Ä–æ—É–ª –±–æ–ª') mode = '<:brawlball:863796136199847946> **–†–µ–∂–∏–º:**';
    if(battlemode == '–£–¥–µ—Ä–∂–∏ —Ç—Ä–æ—Ñ–µ–π') mode = '<:holdthetrophy:863796150544498689> **–†–µ–∂–∏–º:**';
    if(battlemode == '–û—Å–∞–¥–∞') mode = '<:siege:863796114029412363> **–†–µ–∂–∏–º:**';
    if(battlemode == '–û–¥–∏–Ω–æ—á–Ω–æ–µ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ') mode = '<:solo:863673089724252160> **–†–µ–∂–∏–º:**';
    if(battlemode == '–ü–∞—Ä–Ω–æ–µ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ') mode = '<:duo:863673070577516565> **–†–µ–∂–∏–º:**';
    if(battlemode == '–ù–æ–∫–∞—É—Ç') mode = '<:knockout:863797493283028992> **–†–µ–∂–∏–º:**';
    if(battlemode == '–ë–æ–π —Å –±–æ—Å—Å–æ–º') mode = '<:bossfight:863797514146545715> **–†–µ–∂–∏–º:**';
    if(battlemode == '–ë–æ–ª—å—à–∞—è –∏–≥—Ä–∞') mode = '<:biggame:863797504369885264> **–†–µ–∂–∏–º:**';
    if(battlemode == '–†–æ–±–æ—Ä—É–±–∫–∞') mode = '<:roborumble:863673102587002890> **–†–µ–∂–∏–º:**';
    if(battlemode == '–†–∞–∑–≥—Ä–æ–º —Å—É–ø–µ—Ä —Å–∏—Ç–∏') mode = "<:rampage:863814096063561788> **–†–µ–∂–∏–º:**";
    if(battlemode == '–í–æ–ª–µ–π–±–æ–π') mode = "<:volleybrawl:864084739718905907> **–†–µ–∂–∏–º:**";
    if(battlemode == '–ü–æ—Ö–∏—Ç–∏—Ç–µ–ª–∏ —Ç—Ä–æ—Ñ–µ–µ–≤') mode = "<:trophythieves:866595105041154048> **–†–µ–∂–∏–º:**";

var res = ''
if(battleresult == '–ü–æ–±–µ–¥–∞') res = '<a:win:863804751752855562> **–†–µ–∑—É–ª—å—Ç–∞—Ç:**';
if(battleresult == '–ü–æ—Ä–∞–∂–µ–Ω–∏–µ') res = '<a:lose:863804794170245121> **–†–µ–∑—É–ª—å—Ç–∞—Ç:**';
if(battleresult == '–ù–∏—á—å—è') res = ':vs: **–†–µ–∑—É–ª—å—Ç–∞—Ç:**';
if(battleresult == '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') res = ':grey_question: **–†–µ–∑—É–ª—å—Ç–∞—Ç:**';

var clubname = (result.club.name);
if(result.club.name == undefined) clubname = '–ù–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –∫–ª—É–±–µ';
var clubtag = (result.club.tag);
if(result.club.tag == undefined) clubtag = '#000000000';
    if(result.reason) return botmsg.edit( new Discord.MessageEmbed({title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Brawl Stars", description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Ç–µ–≥–∞."}).setColor(`${result.nameColor}`));
    var embed = new Discord.MessageEmbed({title: `–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ –≤ Brawl Stars`, description: `_ _`}).setThumbnail(`https://cdn.brawlify.com/profile/${result.icon.id}.png`).addFields(
      {name: "_ _", value: "_ _"},
      {name: "_–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è_", value: `<:account:863860550072401931> **–ò–º—è:** \`${result.name}\`
      <:id:863854022963101737> **–¢–µ–≥:** \`${result.tag}\`
      <:trophie:863673040930734089> **–¢—Ä–æ—Ñ–µ–∏:** \`${result.trophies}\`
      <:level:863791324343173141> **–£—Ä–æ–≤–µ–Ω—å –æ–ø—ã—Ç–∞:** \`${result.expLevel}\`
      <:trophyroad:863804170996678707> **–ó–≤–∞–Ω–∏–µ –Ω–∞ –ø—É—Ç–∏ –∫ —Å–ª–∞–≤–µ:** ${emoji}
      ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`, inline: true},
      {name: "_–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–±–µ–¥_", value: `<:3vs3:863673052276457483> **–ü–æ–±–µ–¥ 3 –Ω–∞ 3:** \`${result["3vs3Victories"]}\`
      <:solo:863673089724252160> **–ü–æ–±–µ–¥ —Å–æ–ª–æ —à–¥:** \`${result.soloVictories}\`
      <:duo:863673070577516565> **–ü–æ–±–µ–¥ –¥—É–æ —à–¥:** \`${result.duoVictories}\`
      ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`},
      {name: "_–ü–æ—Å–ª–µ–¥–Ω–∏–π –±–æ–π_", value: `${mode} \`${battlemode}\`
      <:mapmaker:863804159454478366> **–ö–∞—Ä—Ç–∞:** \`${battlemap}\`
      ${res} \`${battleresult}\`
      ${type} \`${battletype}\`
      ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`},
      {name: "_–ö–ª—É–±_", value: `**${club}** \`${clubname}\`
      <:id:863854022963101737> **–¢–µ–≥ –∫–ª—É–±–∞: ** \`${clubtag}\`
      ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`},
      {name: "_–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è_", value: `<:xp:863673029128093696> **–û—á–∫–æ–≤ –æ–ø—ã—Ç–∞:** \`${result.expPoints}\`
      <:best_trophy:863791333131157514> **–õ—É—á—à–µ–µ —á–∏—Å–ª–æ —Ç—Ä–æ—Ñ–µ–µ–≤:** \`${result.highestTrophies}\`
      <:roborumble:863673102587002890> **–õ—É—á—à–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–æ–±–æ—Ä—É–±–∫–∏:** \`${roborub}\``},
      {name: "_ _", value: "_ _"},
      { name: '‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ', value: '_ _' }
  ).setColor('RANDOM').setTimestamp().setFooter('–ß–µ–ª–∏–∫ –ë–û–¢', "https://cdn.discordapp.com/avatars/726865963424677909/428c60ceb40c3aeba0f98580ab34c726.webp");
   botmsg.edit(embed)
})})
   break;
case 'club':
  request({url: `https://api.brawlstars.com/v1/clubs/%23${args[2].replace(/[^a-z–∞-—è—ë0-9]/gi, '')}`, headers: {"Authorization": "your bearer token from https://developer.brawlstars.com/#/", "Content-Type": "application/json"}}, (err, res, body) => {
    if(err) return console.error(err);
    var result2 = JSON.parse(body);
    if(result2.reason) return botmsg.edit( new Discord.MessageEmbed({title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Brawl Stars", description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Ç–µ–≥–∞."}).setColor("DARK_RED"));
    var clubb = ''
    if(result2.type == 'open') clubb = '–û—Ç–∫—Ä—ã—Ç—ã–π'
    if(result2.type == 'closed') clubb = '–ó–∞–∫—Ä—ã—Ç—ã–π'
    if(result2.type == 'inviteOnly') clubb = '–¢–æ–ª—å–∫–æ –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é'

   var fdgd = result2.description
   if(result2.description == undefined) fdgd = "_–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç_";

   var typee = ''
   if(result2.type == 'open') typee = '<a:win:863804751752855562> **–¢–∏–ø –∫–ª—É–±–∞:**'
   if(result2.type == 'closed') typee = '<a:lose:863804794170245121> **–¢–∏–ø –∫–ª—É–±–∞:**'
   if(result2.type == 'inviteOnly') typee = '<:level:863791324343173141> **–¢–∏–ø –∫–ª—É–±–∞:**'

   
    var embed = new Discord.MessageEmbed({title: `–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª—É–±–∞ –≤ Brawl Stars`, description: `_ _`}).setThumbnail(`https://cdn.brawlify.com/club/${result2.badgeId}.png`).addFields(
      {name: "_ _", value: "_ _"},
      {name: "_–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è_", value: `<:account:863860550072401931> **–ò–º—è:** \`${result2.name}\`
      <:id:863854022963101737> **–¢–µ–≥:** \`${result2.tag}\`
      <:trophie:863673040930734089> **–¢—Ä–æ—Ñ–µ–∏:** \`${result2.trophies}\`
      <:trophyyy:863810231322542141> **–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ç—Ä–æ—Ñ–µ–µ–≤ –¥–ª—è –≤—Ö–æ–¥–∞:** \`${result2.requiredTrophies}\`
      ${typee} \`${clubb}\`
      ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`, inline: true},
      {name: "_–û–ø–∏—Å–∞–Ω–∏–µ –∫–ª—É–±–∞:_", value: `\n\n ${fdgd.replace(/<\/?[^>]+>/g,'')}`},
      //‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`},
      //{name: "_–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç –∫–ª—É–±–∞:_", value: `<:account:863860550072401931> **–ò–º—è:** \`\`
      //<:id:863854022963101737> **–¢–µ–≥:** \`\`
      //**–ü–æ–¥—Ä–æ–±–Ω–µ–µ:** \`~bsstats player \` (–Ω–µ –∑–∞–±—É–¥—å—Ç–µ —É–±—Ä–∞—Ç—å # –∏–∑ —Ç–µ–≥–∞)
      //`},
      {name: "_ _", value: "_ _"},
      { name: '‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ', value: '_ _' }
  ).setColor('RANDOM').setTimestamp().setFooter('–ß–µ–ª–∏–∫ –ë–û–¢', "https://cdn.discordapp.com/avatars/726865963424677909/428c60ceb40c3aeba0f98580ab34c726.webp");
   botmsg.edit(embed)
})
   break;
  default: 
  botmsg.edit( new Discord.MessageEmbed({title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Brawl Stars", description: `–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã! \n –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: \n
  \`~bsstats player <—Ç–µ–≥ –±–µ–∑ #>\`
  \`~bsstats club <—Ç–µ–≥ –±–µ–∑ #>\``}).setColor("DARK_RED"));
  }}


  async function gdstats(robot,mess,args){
    let botmsg = await mess.reply( new Discord.MessageEmbed({title: "–ü–æ–¥–æ–∂–¥–∏—Ç–µ —Å–µ–∫—É–Ω–¥–æ—á–∫—É...", description: "–ú—ã –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å —Å–µ—Ä–≤–µ—Ä–æ–≤ Geometry Dash. –≠—Ç–æ –∑–∞–π–º–µ—Ç –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥"}).setColor("GREEN"));
    if(!args) return botmsg.edit( new Discord.MessageEmbed({title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Geometry Dash", description: "–í—ã–±–µ—Ä–∏—Ç–µ \`player/level\` –∏ –≤–≤–µ–¥–∏—Ç–µ –∞–π–¥–∏ –∏–ª–∏ –∏–º—è –∏–≥—Ä–æ–∫–∞/–∞–π–¥–∏ —É—Ä–æ–≤–Ω—è."}).setColor("DARK_RED"));
    const request = require("request")
    switch(args[1]){
   case 'player':
    
    request({url: `https://gdbrowser.com/api/profile/${args[2]}`, headers: {"Content-Type": "application/json"}}, (err, res, body) => {
      if(err) return console.error(err);
      var result = JSON.parse(body);
      if(result == -1) return botmsg.edit( new Discord.MessageEmbed({title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Geometry Dash", description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∏–º–µ–Ω–∏ –∏–ª–∏ ID –ø—Ä–æ—Ñ–∏–ª—è"}).setColor("DARK_RED"));
      
      var mod = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
      if(result.moderator == 0) mod = "\`–ù–µ—Ç\`";
      if(result.moderator == 1) mod = "\`–î–∞\`";
      if(result.moderator == 2) mod = "\`–î–∞, —Å—Ç–∞—Ä—à–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä\`";
  
      var moddd = ''
      if(result.moderator == 0) moddd = "<:void:863803473460068402> **–ò–º—è:**";
      if(result.moderator == 1) moddd = "<:mod:864102322388729866> **–ò–º—è:**";
      if(result.moderator == 2) moddd = "<:elder:864102336095191081> **–ò–º—è:**";
  
      var modd = '**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä?:**'
      if(result.moderator == 0) modd = '<a:lose:863804794170245121> **–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä?:**';
      if(result.moderator == 1) modd = '<a:win:863804751752855562> **–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä?:**';
      if(result.moderator == 2) modd = '<a:win:863804751752855562> **–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä?:**';
  
      var yt = `[>> –Ω–∞–∂–º–∏—Ç–µ <<](https://www.youtube.com/channel/${result.youtube})`;
      if(result.youtube == null) yt = '\`–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\`';
  
      var twt = `[${result.twitter}](https://twitter.com/${result.twitter})`;
      if(result.twitter == null) twt = '\`–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\`';
  
      var twh = `[${result.twitch}](https://www.twitch.tv/${result.twitch})`
      if(result.twitch == null) twh = '\`–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\`';
  
      var embed = new Discord.MessageEmbed({title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ Geometry Dash", description: ""}).setThumbnail(`https://gdbrowser.com/icon/${result.username}`).setColor('RANDOM').addFields(
        {name: "_ _", value: "_ _"},
        {name: "_–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è_", value: ` ${moddd} \`${result.username}\`
        <:account1:864101258079502356>**–ê–π–¥–∏:** \`${result.accountID}\`
        <:rank:864100767370838026> **–ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ä–∞–Ω–≥:** \`${result.rank}\`
        <:demon:864098449708548126> **–ü—Ä–æ–π–¥–µ–Ω—ã—Ö –¥–µ–º–æ–Ω–æ–≤:** \`${result.demons}\`
        <:cp:864102350377451532> **–û—á–∫–∏ –∫—Ä–µ–∞—Ç–æ—Ä—Å—Ç–≤–∞:** \`${result.cp}\`
        ${modd} ${mod}`},
        {name: "_–ú–æ–Ω–µ—Ç—ã, –∑–≤–µ–∑–¥—ã –∏ —Ç.–¥._", value: `<:diamond:864097606836813845> **–ê–ª–º–∞–∑–æ–≤:** \`${result.diamonds}\`
        <:star:864097769794174986> **–ó–≤–µ–∑–¥:** \`${result.stars}\`
        <:secretcoin:864098414425014284> **–°–µ–∫—Ä–µ—Ç–Ω—ã—Ö –º–æ–Ω–µ—Ç:** \`${result.coins}\`
        <:usercoin:864098434293825566> **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –º–æ–Ω–µ—Ç:** \`${result.userCoins}\``},
        {name: `_–°–æ—Ü.–°–µ—Ç–∏_`, value: `<:youtube:864112899140091934> **YouTube:** ${yt}
        <:twitter:864112607053348884> **Twitter:** ${twt}
        <:twitch:864112632835211274> **Twitch:** ${twh}`},
        {name: "_ _", value: "_ _"},
        { name: '‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ', value: '_ _' }
      ).setTimestamp().setFooter('–ß–µ–ª–∏–∫ –ë–û–¢', "https://cdn.discordapp.com/avatars/726865963424677909/428c60ceb40c3aeba0f98580ab34c726.webp")
      botmsg.edit(embed)
  });
  break;
  case 'level':
    request({url: `https://gdbrowser.com/api/level/${args[2]}`, headers: {"Content-Type": "application/json"}}, (err, res, body) => {
      if(err) return console.error(err);
      var result = JSON.parse(body);
      if(result == -1) return botmsg.edit( new Discord.MessageEmbed({title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Geometry Dash", description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è ID —É—Ä–æ–≤–Ω—è"}).setColor("DARK_RED"));
      request({url: `https://gdbrowser.com/api/profile/${result.accountID}`, headers: {"Content-Type": "application/json"}}, (err, res, body) => {
      if(err) return console.error(err);
      var result1 = JSON.parse(body);
      
      var long = ''
      if(result.length == 'Tiny') long = '–û—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∞—è'
      if(result.length == 'Short') long = '–ö–æ—Ä–æ—Ç–∫–∞—è'
      if(result.length == 'Medium') long = '–°—Ä–µ–¥–Ω—è—è'
      if(result.length == 'Long') long = '–î–ª–∏–Ω–Ω–∞—è'
      if(result.length == 'XL') long = '–û—á–µ–Ω—å –¥–ª–∏–Ω–Ω–∞—è'
  
      var desc = `*${result.description}*`
      if(result.description == '(No description provided)') desc = ''
  
      var coinss = ''
      if(result.coins == 0) coinss = ``
      if(result.coins == 1) coinss = `<:usercoinunverified:866568165101273119>`
      if(result.coins == 2) coinss = `<:usercoinunverified:866568165101273119><:usercoinunverified:866568165101273119>`
      if(result.coins == 3) coinss = `<:usercoinunverified:866568165101273119><:usercoinunverified:866568165101273119><:usercoinunverified:866568165101273119>`
      
      var coinsss
      if(result.coins == 1) coinsss = `<:usercoin:864098434293825566>`
      if(result.coins == 2) coinsss = `<:usercoin:864098434293825566><:usercoin:864098434293825566>`
      if(result.coins == 3) coinsss = `<:usercoin:864098434293825566><:usercoin:864098434293825566><:usercoin:864098434293825566>`
      
      var coins = ''
      if(result.verifiedCoins == true) coins = `${coinsss}`
      if(result.verifiedCoins == false) coins = `${coinss}`
  
      var ldm = ''
      if(result.ldm == false) ldm = ''
      if(result.ldm == true) ldm = '***–û–±—ä–µ–∫—Ç—ã –≤—ã—Å–æ–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è! (–õ–î–ú)***'
  
      var epic = ''
      if(result.epic == true) epic = '(–≠–ø–∏—á–µ—Å–∫–∏–π)'
      if(result.epic == false) epic = ''
  
  var diff = ''
      if(result.difficulty == 'Unrated') diff = `–ù–µ –æ—Ü–µ–Ω–µ–Ω ${epic}`
      if(result.difficulty == 'Easy') diff = `–õ–µ–≥–∫–∞—è ${epic}`
      if(result.difficulty == 'Normal') diff = `–ù–æ—Ä–º–∞–ª—å–Ω–∞—è ${epic}`
      if(result.difficulty == 'Hard') diff = `–°–ª–æ–∂–Ω–∞—è ${epic}`
      if(result.difficulty == 'Harder') diff = `–°–ª–æ–∂–Ω–µ–π—à–µ—è ${epic}`
      if(result.difficulty == 'Insane') diff = `–ë–µ–∑—É–º–Ω–∞—è ${epic}`
      if(result.difficulty == 'Auto') diff = `–ê–≤—Ç–æ ${epic}`
      if(result.difficulty == 'Demon') diff = `–î–µ–º–æ–Ω ${epic}`
      if(result.difficulty == 'Easy Demon') diff = `–õ–µ–≥–∫–∏–π –î–µ–º–æ–Ω ${epic}`
      if(result.difficulty == 'Medium Demon') diff = `–°—Ä–µ–¥–Ω–∏–π –î–µ–º–æ–Ω ${epic}`
      if(result.difficulty == 'Hard Demon') diff = `–°–ª–æ–∂–Ω—ã–π –î–µ–º–æ–Ω ${epic}`
      if(result.difficulty == 'Insane Demon') diff = `–ë–µ–∑—É–º–Ω—ã–π –î–µ–º–æ–Ω ${epic}`
      if(result.difficulty == 'Extreme Demon') diff = `–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–π –î–µ–º–æ–Ω ${epic}`
  
  
  var track = ''
      if(result.officialSong > 0) track = `**–¢—Ä–µ–∫:**   ${result.songName} (–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π)`
      if(result.customSong > 0) track = `**–¢—Ä–µ–∫:**   [${result.songName}](${result.songLink})`
  
      var songid = ''
      if(result.officialSong > 0) songid = ''
      if(result.customSong > 0) songid = `**–ê–π–¥–∏:** \`${result.songID}\``
  
      var sizee = ''
      if(result.officialSong > 0) sizee = ''
      if(result.customSong > 0) sizee = `**–†–∞–∑–º–µ—Ä:** \`${result.songSize}\``
  
    var authorr = ''
      authorr = `**–ê–≤—Ç–æ—Ä:**   ${result.songAuthor}`
      
      var tp = ''
      if(result.twoPlayer == true) tp = `***–î–ª—è –¥–≤—É—Ö –∏–≥—Ä–æ–∫–æ–≤!***`
      if(result.twoPlayer == false) tp = ``
  
      var copied = ''
      if(result.copiedID == 0) copied = ``
      if(result.copiedID > 0) copied = `**–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω, –∞–π–¥–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞:** \`${result.copiedID}\``
  
      var obje = ''
      if(result.objects == 0) obje = ''
      if(result.objects > 0) obje = `**–û–±—ä–µ–∫—Ç–æ–≤:** \`${result.objects}\``
      
      
      
      
      
      var embed = new Discord.MessageEmbed({title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Ä–æ–≤–Ω—è Geometry Dash", description: `**${result.name}**
      ${desc}`}).setThumbnail(`https://gdbrowser.com/assets/difficulties/${result.difficultyFace}.png`).setColor('RANDOM').addFields(
        {name: "_ _", value: `
        <:diff:866575381497643050> **–°–ª–æ–∂–Ω–æ—Å—Ç—å:** ${diff}
        <:download:864833431883218964> **–°–∫–∞—á–∏–≤–∞–Ω–∏–π:** \`${result.downloads}\`
        <:like:864833420919046166> **–õ–∞–π–∫–æ–≤:** \`${result.likes}\` 
        <:time:864833391986475008> **–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** ${long} 
        ${coins}`},
        {name: "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ", value: `<:orbs:864833405493182464> **–û—Ä–±–æ–≤:** \`${result.orbs}\` 
        <:star:864097769794174986> **–ó–≤–µ–∑–¥:** \`${result.stars}\` 
        <:diamond:864097606836813845> **–ê–ª–º–∞–∑–æ–≤:** \`${result.diamonds}\` `},
        {name: `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`, value: `${track}
        ${authorr}
        ${songid}
        ${sizee}`},
        {name: `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`, value: `**–ê–π–¥–∏ —É—Ä–æ–≤–Ω—è:** \`${result.id}\`
        **–í—ã–ø—É—â–µ–Ω–æ –Ω–∞:** \`GD ${result.gameVersion}\`
        **–í–µ—Ä—Å–∏—è —É—Ä–æ–≤–Ω—è:** \`${result.version}\`
        ${obje}
        ${copied}
        ${tp}
        ${ldm}`},
        {name: "_ _", value: "_ _"},
        { name: '‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ‚ñ¨ ', value: '_ _' }
      ).setFooter(`–ê–≤—Ç–æ—Ä: ${result.author} ‚Ä¢ id: ${result.accountID} ‚Ä¢ ~gdstats player ${result.accountID}`, `https://gdbrowser.com/icon/${result1.username}`)
      botmsg.edit(embed)
  })})
  break;
  default:
    botmsg.edit( new Discord.MessageEmbed({title: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Geometry Dash", description: `–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã! \n –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: \n
    \`~gdstats player <ID –∏–ª–∏ –∏–º—è –∏–≥—Ä–æ–∫–∞>\`
    \`~gdstats level <ID —É—Ä–æ–≤–Ω—è>\``}).setColor("DARK_RED"));
    }};



// –°–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥ //

var comms_list = [{
    name: "test",
    out: test,
    about: "–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞"
  },
  {
    name: "covid",
    out: covid,
    about: "corona"
  },
  {
    name: "hello",
    out: hello,
    about: "–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è!"
  },
  {
    name: "invite",
    out: invite,
    about: "–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤"
  },
  {
    name: "clear",
    out: clear,
    about: "—á–∏—Å—Ç–∫–∞"
  },
  {
    name: "say",
    out: say,
    about: "—Å–∫–∞–∑–∞—Ç—å"
  },
  {
    name: "8ball",
    out: _8ball,
    about: "—à–∞—Ä"
  },
  {
    name:"oir",
    out: oir,
    about: "–æ—Ä–µ–ª –∏ —Ä–µ—à–∫–∞" 
  },
  {
    name:"help",
    out: help,
    about: "–ø–æ–º–æ—â—å"
  },
  {
    name:"ban",
    out: ban,
    about: "ban"
  },
  {
    name:"kick",
    out: kick,
    about: "kick"
  },
  {
    name: "avatar",
    out: avatar,
    about: 'avatar'
  },
  {
    name: "unban",
    out: unban,
    about: 'unban users'
  },
  {
    name: 'btest',
    out: btest,
    about: 'btest'
  },
  {
  name: 'chlog',
  out: chlog,
  about: 'chlog'
  },
  {
    name: 'info',
    out: _info,
    about: 'info'
  },
  {
    name: 'servers',
    out: servers,
    about: 'servers'
  },
  {
  name: 'bsstats',
  out: bsstats,
  about: 'bsstats'
  },
  {
  name: 'gdstats',
  out: gdstats,
  about: 'gdstats'
  }
]

module.exports.comms = comms_list;